/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._wui;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import weaver.hrm.HrmUserVarify;
import weaver.hrm.User;
import weaver.general.*;
import java.util.Map;

public class _main__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;

  
  private String getCurrWuiConfig(HttpSession session, User user, String keyword) throws Exception {
  	
  	if (keyword == null || "".equals(keyword)) {
  		return "";
  	}
  	
  	String curTheme = "";
  	String curskin = "";
  
  	curTheme = (String)session.getAttribute("SESSION_CURRENT_THEME");
  	if (curTheme == null || curTheme.equals("")) {
  		String[] rtnValue = getHrmUserSetting(user);
  		
  		curTheme = rtnValue[0];
  		curskin = rtnValue[1];
  		
  		session.setAttribute("SESSION_CURRENT_THEME", curTheme);
  		session.setAttribute("SESSION_CURRENT_SKIN", curskin);
  	} else {
  		curskin = (String)session.getAttribute("SESSION_CURRENT_SKIN");
  		if (curskin == null || curskin.equals("")) {
  			curskin = getCurrSkinFolder(user);
  			session.setAttribute("SESSION_CURRENT_SKIN", curskin);
  		}
  	}
  	
  	if ("THEME".equals(keyword.toUpperCase())) {
  		return curTheme;
  	}
  	
  	if ("SKIN".equals(keyword.toUpperCase())) {
  		return curskin;
  	}
  	return "";
  }
  
  
  
  private String getCurrSkinFolder(User user) throws Exception {
  	String pslSkinfolder = "";
  	weaver.conn.RecordSet rs = new weaver.conn.RecordSet();
  
  	int userid = user.getUID();
  
  	rs.executeSql("select skin from HrmUserSetting where resourceId=" + userid);
  	
  	if (rs.next()) {
  		pslSkinfolder = rs.getString("skin");
  	}
  
  	if (pslSkinfolder == null || "".equals(pslSkinfolder)) {
  	    pslSkinfolder = "default";
  	}
  	return pslSkinfolder;
  }
  
  
  private String[] getHrmUserSetting(User user) throws Exception {
  	weaver.conn.RecordSet rs = new weaver.conn.RecordSet();
  	weaver.systeminfo.template.UserTemplate  userTemplate = new weaver.systeminfo.template.UserTemplate();
  	userTemplate.getTemplateByUID(user.getUID(),user.getUserSubCompany1());
  	
  	int extendtempletvalueid = userTemplate.getExtendtempletvalueid();
  	String sqltemplateid1 = ""+extendtempletvalueid;
  	if(userTemplate.getTemplateId()==1){
  		sqltemplateid1 = "(select id from extandHpTheme where templateId=1 and subcompanyid = "+user.getUserSubCompany1()+")";
  	}
  
  	String[] result = new String[2];
  	rs.executeSql("select * from extandHpThemeItem where extandHpThemeId=" + sqltemplateid1 + " and islock=1");
  	if (rs.next()) {
  		result[0] = rs.getString("theme");
  		result[1] = rs.getString("skin");
  		return result;
  	} 
  
  	int userid = user.getUID();
  
  	rs.executeSql("select theme, skin from HrmUserSetting where resourceId=" + userid);
  	String theme = "";
  	String skin = "";
  	if (rs.next()) {
  		theme = rs.getString("theme");
  		skin = rs.getString("skin");
  	}
  	
  	rs.executeSql("select * from extandHpThemeItem where extandHpThemeId=" + sqltemplateid1 + " and isopen=1 and theme='" + theme + "' and skin='" + skin + "'");
  	
  	if (rs.next()) {
  		result[0] = theme;
  		result[1] = skin;
  	}else{
  		rs.executeSql("select theme,skin from extandHpThemeItem where extandHpThemeId=" + sqltemplateid1 + " and isopen=1");
  		while (rs.next()) {
  			theme = rs.getString("theme");
  			skin = rs.getString("skin");
  			if("ecology7".equals(theme)&&"default".equals(skin)){
  				result[0] = theme;
  				result[1] = skin;
  				break;
  			}
  			result[0] = theme;
  			result[1] = skin;
  		}		
  	}
  	
  	if ((result[0] == null || "".equals(result[0])) && !theme.equalsIgnoreCase("ecology6") ) {
  		result[0] = "ecology7";
  	} else if (theme.equalsIgnoreCase("ecology6")){
  		result[0] = "ecology6";
  	}
  	
  	if (result[1] == null || "".equals(result[1])) {
  		result[1] = "default";
  	}
  	return result;
  }
  
  private java.util.Map getPageConfigInfo(HttpSession session, User user) throws Exception{
  	
  	weaver.conn.RecordSet rs = new weaver.conn.RecordSet();
  	java.util.Map pageConfigkv = new java.util.HashMap();
  	
  	weaver.systeminfo.template.UserTemplate  userTemplate = new weaver.systeminfo.template.UserTemplate();
  	userTemplate.getTemplateByUID(user.getUID(),user.getUserSubCompany1());
  	
  	
  	
  	int extendtempletvalueid = userTemplate.getExtendtempletvalueid();
  	rs.executeSql("select * from extandHpThemeItem where extandHpThemeId=" + extendtempletvalueid + " and isopen=1 and theme='" + getCurrWuiConfig(session, user, "THEME") + "' and skin='" + getCurrWuiConfig(session, user, "SKIN") + "'");
  	
  	if (rs.next()) {
  		pageConfigkv.put("logoTop", rs.getString("logoTop"));
  		pageConfigkv.put("logoBottom", rs.getString("logoBottom"));
  		pageConfigkv.put("isopen", rs.getString("isopen"));
  		pageConfigkv.put("islock", rs.getString("islock"));
  		
  		/**
  		 * ecologybasic\u4e3b\u9898\u7528\u8bbe\u7f6e\u9879
  		 */
  		pageConfigkv.put("bodyBg", rs.getString("bodyBg"));
  		pageConfigkv.put("topBgImage", rs.getString("topBgImage"));
  		pageConfigkv.put("toolbarBgColor", rs.getString("toolbarBgColor"));
  		pageConfigkv.put("menuborderColor", rs.getString("menuborderColor"));
  
  		pageConfigkv.put("leftbarBgImage", rs.getString("leftbarBgImage"));
  		pageConfigkv.put("leftbarBgImageH", rs.getString("leftbarBgImageH"));
  
  		pageConfigkv.put("leftbarborderColor", rs.getString("leftbarborderColor"));
  		pageConfigkv.put("leftbarFontColor", rs.getString("leftbarFontColor"));
  
  		pageConfigkv.put("topleftbarBgImage_left", rs.getString("topleftbarBgImage_left"));
  		pageConfigkv.put("topleftbarBgImage_center", rs.getString("topleftbarBgImage_center"));
  		pageConfigkv.put("topleftbarBgImage_right", rs.getString("topleftbarBgImage_right"));
  
  		pageConfigkv.put("bottomleftbarBgImage_left", rs.getString("bottomleftbarBgImage_left"));
  		pageConfigkv.put("bottomleftbarBgImage_center", rs.getString("bottomleftbarBgImage_center"));
  		pageConfigkv.put("bottomleftbarBgImage_right", rs.getString("bottomleftbarBgImage_right"));
  
  	}
  	
  	return pageConfigkv;
  	
  }

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=GBK");
    request.setCharacterEncoding("GBK");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
//\u5224\u65ad\u5bc6\u7801\u5f3a\u5236\u4fee\u6539
String changepwd = (String)request.getSession().getAttribute("changepwd");
if("n".equals(changepwd)){
	request.getSession().removeAttribute("changepwd");
	response.sendRedirect("/login/Login.jsp");
	return;
}else if("y".equals(changepwd)){
	request.getSession().removeAttribute("changepwd");
}


/*\u7528\u6237\u9a8c\u8bc1*/
User user = HrmUserVarify.getUser (request , response) ;
if(user==null) {
    response.sendRedirect("/login/Login.jsp");
    return;
}

      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.workflow.workflow.TestWorkflowCheck TestWorkflowCheckInitWui;
      TestWorkflowCheckInitWui = (weaver.workflow.workflow.TestWorkflowCheck) pageContext.getAttribute("TestWorkflowCheckInitWui");
      if (TestWorkflowCheckInitWui == null) {
        TestWorkflowCheckInitWui = new weaver.workflow.workflow.TestWorkflowCheck();
        pageContext.setAttribute("TestWorkflowCheckInitWui", TestWorkflowCheckInitWui);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      out.println(TestWorkflowCheckInitWui.ReloadByDialogClose(request));
      out.write(_jsp_string3, 0, _jsp_string3.length);
      
    if(TestWorkflowCheckInitWui.checkURI(session,request.getRequestURI(),request.getQueryString())){
        response.sendRedirect("/login/Login.jsp");
        return;
    }

      out.write(_jsp_string4, 0, _jsp_string4.length);
      
/**
 * \u7cfb\u7edf\u4e3b\u9898
 */
String curTheme = "";
String ely6flg = "";
String gopage = Util.null2String(request.getParameter("gopage"));
String frompage = Util.null2String(request.getParameter("frompage"));
int targetid = Util.getIntValue(request.getParameter("targetid"),0) ;
String logintype = Util.null2String(user.getLogintype()) ;
curTheme = getCurrWuiConfig(session, user, "theme");

if ("ecology6".equals(curTheme.toLowerCase())) {
	curTheme = "ecology7";
	ely6flg = "ecology6";
}

/*
if (ely6flg != null && !"".equals(ely6flg) && "ecology6".equals(ely6flg)) {	
	response.sendRedirect("/main.jsp");
	return;
}
*/
/*
 * \u6839\u636e\u7528\u6237\u8bbe\u7f6e\uff0c\u8df3\u8f6c\u5230\u76f8\u5e94\u7684\u6a21\u5f0f\u4e2d
 */
request.getRequestDispatcher("/wui/theme/" + curTheme +"/page/main.jsp?"+request.getQueryString()).forward(request, response);

      out.write(_jsp_string1, 0, _jsp_string1.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("wui/main.jsp"), -1600737648426124325L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("wui/common/page/initWui.jsp"), -3892576944553631080L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string0;
  private final static char []_jsp_string2;
  private final static char []_jsp_string3;
  private final static char []_jsp_string1;
  private final static char []_jsp_string4;
  static {
    _jsp_string0 = "\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string2 = "\r\n<LINK href=\"/js/jquery/jquery_dialog.css\" type=text/css rel=STYLESHEET>\r\n<script type=\"text/javascript\" language=\"javascript\" src=\"/js/jquery/jquery_dialog.js\"></script>\r\n<script type=\"text/javascript\" language=\"javascript\">\r\nfunction ReloadOpenerByDialogClose() {\r\n    ".toCharArray();
    _jsp_string3 = "\r\n}\r\n</script>\r\n".toCharArray();
    _jsp_string1 = "\r\n".toCharArray();
    _jsp_string4 = "\r\n\r\n".toCharArray();
  }
}
