/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._workflow._request;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import weaver.workflow.datainput.DynamicDataInput;
import java.util.ArrayList;
import weaver.general.Util;
import java.util.Hashtable;

public class _datainputfrom__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=GBK");
    request.setCharacterEncoding("GBK");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      weaver.conn.RecordSet rs;
      rs = (weaver.conn.RecordSet) pageContext.getAttribute("rs");
      if (rs == null) {
        rs = new weaver.conn.RecordSet();
        pageContext.setAttribute("rs", rs);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.conn.RecordSet rs1;
      rs1 = (weaver.conn.RecordSet) pageContext.getAttribute("rs1");
      if (rs1 == null) {
        rs1 = new weaver.conn.RecordSet();
        pageContext.setAttribute("rs1", rs1);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      
String fformid=Util.null2String(request.getParameter("formid"));
String wflid=request.getParameter("id");
String triggerfieldnameS=request.getParameter("trg");
String isbill=request.getParameter("bill");
String nodeid=request.getParameter("node");
int tableid=0;
int detailsum=Util.getIntValue(request.getParameter("detailsum"),0);
String inputchecks="";

      out.write(_jsp_string2, 0, _jsp_string2.length);
      
ArrayList triggerfieldnameArr = Util.TokenizerString(triggerfieldnameS,",");
for(int temp=0;temp<triggerfieldnameArr.size();temp++){
	String triggerfieldname = Util.null2String((String)triggerfieldnameArr.get(temp));
	if(triggerfieldname!=null && !triggerfieldname.trim().equals("")){
		DynamicDataInput DDI = new DynamicDataInput(wflid,triggerfieldname,isbill);
		ArrayList clearjs=new ArrayList();
		clearjs=DDI.ClearMainField(wflid,triggerfieldname,isbill,nodeid);
		for(int i=0;i<clearjs.size();i++){
			String tempjs = (String)clearjs.get(i);
			tempjs = tempjs.replaceAll("window.parent.document.getElementById\\(", "getElementByDocument\\(window.parent.document, ");

      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print((tempjs));
      out.write(_jsp_string4, 0, _jsp_string4.length);
      		}	
		String sql="select id from Workflow_DataInput_entry where WorkFlowID="+wflid+" and TriggerFieldName='"+triggerfieldname+"'";
		rs.executeSql(sql);
		String entryid="";
		String datainputid="";
		Hashtable outdatahash=new Hashtable();
		while(rs.next()){
			entryid=rs.getString("id");
			rs1.executeSql("select id,IsCycle,WhereClause from Workflow_DataInput_main where entryID="+entryid+" order by orderid");
			String sql1="";
			ArrayList outfieldnamelist=new ArrayList();
			ArrayList outdatasList=new ArrayList();
			ArrayList[] templist=new ArrayList[10];
			ArrayList[] templistdetail=new ArrayList[10];
			String[] isclear=new String[10];
			String[] iscleardetail=new String[10];
		
			while(rs1.next()){
				isclear[tableid]="1";
				iscleardetail[tableid]="1";
				templist[tableid]=new ArrayList();
				templistdetail[tableid]=new ArrayList();
				datainputid=rs1.getString("id");
				
				ArrayList infieldnamelist=DDI.GetInFieldName(datainputid);
				for(int i=0;i<infieldnamelist.size();i++){
					DDI.SetInFields((String)infieldnamelist.get(i),Util.null2String(request.getParameter(datainputid+"|"+(String)infieldnamelist.get(i))));
				}
				ArrayList conditionfieldnameList=DDI.GetConditionFieldName(datainputid);
				for(int j=0;j<conditionfieldnameList.size();j++){
					DDI.SetConditonFields((String)conditionfieldnameList.get(j),Util.null2String(request.getParameter(datainputid+"|"+(String)conditionfieldnameList.get(j))));
				}
		        DDI.GetOutData(datainputid);
		        outfieldnamelist=DDI.GetOutFieldNameList();
		        outdatasList=DDI.GetOutDataList();
		        
		      	//\u4e3b\u8868\u5b57\u6bb5\u66f4\u65b0
				if(DDI.GetIsCycle().equals("1")){
				 	for(int i=0;i<outdatasList.size();i++){
				 		outdatahash = (Hashtable)outdatasList.get(i);
				 		for(int j=0; j<outfieldnamelist.size(); j++){
				 		    String tempValue = (String)outdatahash.get(outfieldnamelist.get(j));
				 		 	tempValue = Util.toExcelData(tempValue);
				 		    tempValue = Util.StringReplace(tempValue,";","\u250cweaver\u250c");
			 				String js=DDI.ChangeMainField((String)outfieldnamelist.get(j),tempValue,isbill,nodeid,triggerfieldname);
			 				js = Util.StringReplace(js,"&quot\uff1b","\\\\\\\"");
			 				js = Util.StringReplace(js,"\''", "\'");
			 				js = js.replaceAll("window.parent.document.getElementById\\(", "getElementByDocument\\(window.parent.document, ");

      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print((js));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      
		        		}
	       			}
				//\u660e\u7ec6\u8868\u5b57\u6bb5\u66f4\u65b0
		       	} else {
		       		ArrayList viewfields=new ArrayList();
		       		if(outdatasList.size()>0){
		       			viewfields=DDI.ViewDetailFieldList(fformid,nodeid,tableid);
		       		}
		       		
			       	for(int i=0;i<outdatasList.size();i++){
			       		outdatahash=(Hashtable)outdatasList.get(i);
			       		String html="";
			       		if(outdatahash.size()>0 && outfieldnamelist.size()>0){

      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print((tableid));
      out.write(_jsp_string8, 0, _jsp_string8.length);
      out.print((tableid));
      out.write(_jsp_string9, 0, _jsp_string9.length);
      out.print((tableid));
      out.write(_jsp_string10, 0, _jsp_string10.length);
      out.print((tableid));
      out.write(_jsp_string11, 0, _jsp_string11.length);
      
						}
					
			        	for(int j=0;j<viewfields.size();j++){
			        		int outindx=outfieldnamelist.indexOf(viewfields.get(j));
			        		if(outindx>-1){
			        			html=DDI.addcol((String)outfieldnamelist.get(outindx),(String)outdatahash.get(outfieldnamelist.get(outindx)),isbill,nodeid,triggerfieldname,i,tableid);
			        		} else {
			        			html=DDI.addcol((String)viewfields.get(j),"",isbill,nodeid,triggerfieldname,i,tableid);
			        		}
			        		
			        		if(!html.trim().equals("")){

      out.write(_jsp_string12, 0, _jsp_string12.length);
      out.print((html));
      out.write(_jsp_string13, 0, _jsp_string13.length);
      
		        			}
		        		}

      out.write(_jsp_string14, 0, _jsp_string14.length);
      out.print((tableid));
      out.write(_jsp_string15, 0, _jsp_string15.length);
      out.print((tableid));
      out.write(_jsp_string16, 0, _jsp_string16.length);
      out.print((tableid));
      out.write(_jsp_string17, 0, _jsp_string17.length);
      
		        	}
			       	if(outdatasList.size()>0){
			       		tableid++;
			       	}
	        	}
			}
		}
		inputchecks=DDI.GetNeedCheckStr();
	}
}

      out.write(_jsp_string18, 0, _jsp_string18.length);
      out.print((inputchecks));
      out.write(_jsp_string19, 0, _jsp_string19.length);
        for(int j=0;j<detailsum;j++){  
      out.write(_jsp_string20, 0, _jsp_string20.length);
      out.print((j));
      out.write(_jsp_string21, 0, _jsp_string21.length);
      out.print((j));
      out.write(_jsp_string22, 0, _jsp_string22.length);
      out.print((j));
      out.write(_jsp_string23, 0, _jsp_string23.length);
      out.print((j));
      out.write(_jsp_string24, 0, _jsp_string24.length);
      out.print((j));
      out.write(_jsp_string25, 0, _jsp_string25.length);
      out.print((j));
      out.write(_jsp_string26, 0, _jsp_string26.length);
        }  
      out.write(_jsp_string27, 0, _jsp_string27.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("workflow/request/DataInputFrom.jsp"), -7506239021655821659L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string7;
  private final static char []_jsp_string14;
  private final static char []_jsp_string27;
  private final static char []_jsp_string21;
  private final static char []_jsp_string23;
  private final static char []_jsp_string6;
  private final static char []_jsp_string24;
  private final static char []_jsp_string20;
  private final static char []_jsp_string10;
  private final static char []_jsp_string3;
  private final static char []_jsp_string8;
  private final static char []_jsp_string16;
  private final static char []_jsp_string19;
  private final static char []_jsp_string18;
  private final static char []_jsp_string17;
  private final static char []_jsp_string11;
  private final static char []_jsp_string2;
  private final static char []_jsp_string26;
  private final static char []_jsp_string15;
  private final static char []_jsp_string12;
  private final static char []_jsp_string4;
  private final static char []_jsp_string0;
  private final static char []_jsp_string1;
  private final static char []_jsp_string25;
  private final static char []_jsp_string13;
  private final static char []_jsp_string22;
  private final static char []_jsp_string5;
  private final static char []_jsp_string9;
  static {
    _jsp_string7 = "\r\n\r\ntry{\r\n	var oTable=window.parent.document.getElementById('oTable".toCharArray();
    _jsp_string14 = "\r\n\r\ntry{\r\n	rowindex = rowindex*1 +1;\r\n	curindex = curindex*1 +1;\r\n	window.parent.document.getElementById(\"nodesnum".toCharArray();
    _jsp_string27 = "\r\n  }catch(e){}\r\n}\r\n\r\n/**\r\n * \u6839\u636e\u6807\u8bc6\uff08name\u6216\u8005id\uff09\u83b7\u53d6\u5143\u7d20\uff0c\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u7cfb\u7edf\u4e2d\u5f88\u591a\u5143\u7d20\u6ca1\u6709id\u5c5e\u6027\uff0c\r\n * \u5374\u5728js\u4e2d\u4f7f\u7528document.getElementById(name)\u6765\u83b7\u53d6\u5143\u7d20\u7684\u95ee\u9898\u3002\r\n * @param identity name\u6216\u8005id\r\n * @return \u5143\u7d20\r\n */\r\nfunction $GetEle(identity, _document) {\r\n	var rtnEle = null;\r\n	if (_document == undefined || _document == null) _document = document;\r\n	\r\n	rtnEle = _document.getElementById(identity);\r\n	if (rtnEle == undefined || rtnEle == null) {\r\n		rtnEle = _document.getElementsByName(identity);\r\n		if (rtnEle.length > 0) rtnEle = rtnEle[0];\r\n		else rtnEle = null;\r\n	}\r\n	return rtnEle;\r\n}\r\n\r\nfunction getElementByDocument(_document, identity) {\r\n	return $GetEle(identity, _document);\r\n}\r\n</script>".toCharArray();
    _jsp_string21 = "');\r\n    len = window.parent.document.forms[0].elements.length;\r\n    var i=0;\r\n    var rowsum1 = 0;\r\n    for(i=len-1; i >= 0;i--) {\r\n        if (window.parent.document.forms[0].elements[i].name=='check_node".toCharArray();
    _jsp_string23 = "'){\r\n            oTable.deleteRow(rowsum1);\r\n            rowsum1 -=1;\r\n        }\r\n    }\r\n    window.parent.calSum(".toCharArray();
    _jsp_string6 = "\";\r\n	var temp=mainjs;\r\n	var spaninx=temp.indexOf(\";\");					\r\n	mainjs=\"\";\r\n	var indx=0;\r\n	if(spaninx>0){\r\n		mainjs+=temp.substring(spaninx+1,temp.length);\r\n		temp=temp.substring(0,spaninx);						\r\n	}\r\n	while(temp.length>0){\r\n		indx=temp.indexOf(\"<br>\");\r\n		if(indx>=0){\r\n			mainjs+=temp.substring(0,indx)+\"\\\\\"+\"r\"+\"\\\\\"+\"n\";\r\n			temp=temp.substring(indx+4,temp.length);\r\n		}else{\r\n			mainjs+=temp;\r\n			temp=\"\";\r\n		}\r\n	}\r\n	mainjs = mainjs.replace(/\u250cweaver\u250c/g,\";\");\r\n	eval(mainjs);\r\n}catch(e){}\r\n".toCharArray();
    _jsp_string24 = ");\r\n    window.parent.document.getElementById(\"nodesnum".toCharArray();
    _jsp_string20 = "\r\n  	var oTable=window.parent.document.getElementById('oTable".toCharArray();
    _jsp_string10 = "').value);\r\n	oRow = oTable.insertRow(curindex+1);\r\n	oCell = oRow.insertCell(-1); \r\n	oCell.style.height=24;\r\n	oCell.style.background= \"#E7E7E7\";\r\n	var oDiv = window.parent.document.createElement(\"div\");\r\n	var sHtml = \"<input type='checkbox' name='check_node".toCharArray();
    _jsp_string3 = "\r\n		//\u9875\u9762\u8f93\u51fa\u5b57\u6bb5\u503c\u521d\u59cb\u5316\uff08\u4e3b\u5b57\u6bb5\u503c\u6e05\u9664\uff09 \r\n		eval(\"".toCharArray();
    _jsp_string8 = "');\r\n	curindex=parseInt(window.parent.document.getElementById('nodesnum".toCharArray();
    _jsp_string16 = "\").value=rowindex;\r\n	window.parent.calSum(".toCharArray();
    _jsp_string19 = "\";\r\n}catch(e){}\r\n}\r\n\r\nfunction delall(){\r\n	try{\r\n".toCharArray();
    _jsp_string18 = "\r\n\r\ntry{\r\n	window.parent.document.getElementById(\"inputcheck\").value=window.parent.document.getElementById(\"inputcheck\").value+\"".toCharArray();
    _jsp_string17 = ");\r\n}catch(e){}\r\n\r\n".toCharArray();
    _jsp_string11 = "' value='\"+rowindex+\"'>\";\r\n	oDiv.innerHTML = sHtml;\r\n	oCell.appendChild(oDiv);\r\n}catch(e){}\r\n		        \r\n".toCharArray();
    _jsp_string2 = "\r\n<script type=\"text/javascript\" src=\"/wui/common/js/ckeditor/ckeditor.js\"></script>\r\n<script type=\"text/javascript\" src=\"/wui/common/js/ckeditor/ckeditorext.js\"></script>\r\n<script language=\"javascript\">\r\nwindow.onload = function (){\r\n".toCharArray();
    _jsp_string26 = "\").value=\"0\";\r\n".toCharArray();
    _jsp_string15 = "\").value=curindex;\r\n	window.parent.document.getElementById(\"indexnum".toCharArray();
    _jsp_string12 = "\r\n\r\ntry{\r\n	oCell = oRow.insertCell(-1); \r\n	oCell.style.height=24;\r\n	oCell.style.background= \"#E7E7E7\";\r\n	var oDiv = window.parent.document.createElement(\"div\");\r\n	var mainjs=\"".toCharArray();
    _jsp_string4 = "\");\r\n".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string1 = "\r\n".toCharArray();
    _jsp_string25 = "\").value=\"0\";\r\n	window.parent.document.getElementById(\"indexnum".toCharArray();
    _jsp_string13 = "\";\r\n	var temp=mainjs;\r\n	var spaninx=temp.indexOf(\"<span notview\");\r\n	mainjs=\"\";\r\n	var indx=0;\r\n	if(spaninx>0){\r\n		mainjs+=temp.substring(spaninx,temp.length);\r\n		temp=temp.substring(0,spaninx);				\r\n	}\r\n	while(temp.length>0){					\r\n		indx=temp.indexOf(\"<br>\");\r\n		if(indx>=0){\r\n			mainjs+=temp.substring(0,indx)+\"\\r\\n\";\r\n			temp=temp.substring(indx+4,temp.length);							\r\n		}else{\r\n			mainjs+=temp;\r\n			temp=\"\";\r\n		}\r\n	}\r\n	oDiv.innerHTML = mainjs;\r\n	oCell.appendChild(oDiv);\r\n}catch(e){}\r\n\r\n".toCharArray();
    _jsp_string22 = "')\r\n            rowsum1 += 1;\r\n    }\r\n    for(i=len-1; i >= 0;i--) {\r\n        if (window.parent.document.forms[0].elements[i].name=='check_node".toCharArray();
    _jsp_string5 = "\r\ntry{\r\n	var mainjs=\"".toCharArray();
    _jsp_string9 = "').value);\r\n	rowindex=parseInt(window.parent.document.getElementById('indexnum".toCharArray();
  }
}
