/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._page._element._compatible;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;
import weaver.hrm.*;
import weaver.systeminfo.*;
import weaver.general.StaticObj;
import weaver.general.Util;
import weaver.hrm.settings.RemindSettings;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import weaver.general.SplitPageParaBean;
import weaver.homepage.style.HomepageStyleBean;

public class _view__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=GBK");
    request.setCharacterEncoding("GBK");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
	
	response.setHeader("cache-control", "no-cache");
	response.setHeader("pragma", "no-cache");
	response.setHeader("expires", "Mon 1 Jan 1990 00:00:00 GMT");
	

	User user = HrmUserVarify.getUser (request , response) ;
	if(user == null)  return ;
	Log logger= LogFactory.getLog(this.getClass());

      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.conn.RecordSet rs;
      rs = (weaver.conn.RecordSet) pageContext.getAttribute("rs");
      if (rs == null) {
        rs = new weaver.conn.RecordSet();
        pageContext.setAttribute("rs", rs);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      weaver.conn.RecordSet rs1;
      rs1 = (weaver.conn.RecordSet) pageContext.getAttribute("rs1");
      if (rs1 == null) {
        rs1 = new weaver.conn.RecordSet();
        pageContext.setAttribute("rs1", rs1);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      weaver.conn.RecordSet rsWordCount;
      rsWordCount = (weaver.conn.RecordSet) pageContext.getAttribute("rsWordCount");
      if (rsWordCount == null) {
        rsWordCount = new weaver.conn.RecordSet();
        pageContext.setAttribute("rsWordCount", rsWordCount);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      weaver.general.SplitPageUtil spu;
      spu = (weaver.general.SplitPageUtil) pageContext.getAttribute("spu");
      if (spu == null) {
        spu = new weaver.general.SplitPageUtil();
        pageContext.setAttribute("spu", spu);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      weaver.homepage.style.HomepageStyleUtil hpsu;
      hpsu = (weaver.homepage.style.HomepageStyleUtil) pageContext.getAttribute("hpsu");
      if (hpsu == null) {
        hpsu = new weaver.homepage.style.HomepageStyleUtil();
        pageContext.setAttribute("hpsu", hpsu);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      weaver.homepage.cominfo.HomepageElementCominfo hpec;
      hpec = (weaver.homepage.cominfo.HomepageElementCominfo) pageContext.getAttribute("hpec");
      if (hpec == null) {
        hpec = new weaver.homepage.cominfo.HomepageElementCominfo();
        pageContext.setAttribute("hpec", hpec);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      weaver.homepage.cominfo.HomepageElementFieldCominfo hpefc;
      hpefc = (weaver.homepage.cominfo.HomepageElementFieldCominfo) pageContext.getAttribute("hpefc");
      if (hpefc == null) {
        hpefc = new weaver.homepage.cominfo.HomepageElementFieldCominfo();
        pageContext.setAttribute("hpefc", hpefc);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      weaver.page.PageCominfo pc;
      pc = (weaver.page.PageCominfo) pageContext.getAttribute("pc");
      if (pc == null) {
        pc = new weaver.page.PageCominfo();
        pageContext.setAttribute("pc", pc);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      weaver.page.PageUtil pu;
      pu = (weaver.page.PageUtil) pageContext.getAttribute("pu");
      if (pu == null) {
        pu = new weaver.page.PageUtil();
        pageContext.setAttribute("pu", pu);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      weaver.page.element.ElementBaseCominfo ebc;
      ebc = (weaver.page.element.ElementBaseCominfo) pageContext.getAttribute("ebc");
      if (ebc == null) {
        ebc = new weaver.page.element.ElementBaseCominfo();
        pageContext.setAttribute("ebc", ebc);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      weaver.page.style.ElementStyleCominfo esc;
      esc = (weaver.page.style.ElementStyleCominfo) pageContext.getAttribute("esc");
      if (esc == null) {
        esc = new weaver.page.style.ElementStyleCominfo();
        pageContext.setAttribute("esc", esc);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      weaver.page.element.ElementUtil ec;
      ec = (weaver.page.element.ElementUtil) pageContext.getAttribute("ec");
      if (ec == null) {
        ec = new weaver.page.element.ElementUtil();
        pageContext.setAttribute("ec", ec);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      
boolean isSystemer=false;
if(HrmUserVarify.checkUserRight("homepage:Maint", user)) isSystemer=true;

String hpid = Util.null2String(request.getParameter("hpid"));	
int subCompanyId = Util.getIntValue(request.getParameter("subCompanyId"),-1);
String eid=Util.null2String(request.getParameter("eid"));		
String ebaseid=Util.null2String(request.getParameter("ebaseid"));	
String styleid=Util.null2String(request.getParameter("styleid"));

boolean hasRight =true;
	User loginuser = (User)request.getSession(true).getAttribute("weaver_user@bean") ;
	// \u5148\u53d6\u6d88\u6743\u9650\u5224\u65ad
	if(loginuser != null)  {
		hasRight =  ec.isHasRight(eid,loginuser.getUID()+"");
	}
	if(!hasRight){
		response.sendRedirect("/page/element/noright.jsp");
	}

//\u5f97\u5230\u662f\u5426\u662f\u7279\u6b8a\u5904\u7406
boolean isSpecial=false;	
isSpecial=Util.getIntValue(ebc.getType(ebaseid))==2?true:false;
String sppbMethod="";	

	Class tempClass=null;
	Method tempMethod=null;
	Constructor ct=null;
	//\u5f97\u5230\u9700\u8981\u663e\u793a\u7684\u5b57\u6bb5
	ArrayList fieldIdList=new ArrayList();
	ArrayList fieldColumnList=new ArrayList();
	ArrayList fieldIsDate=new ArrayList();
	ArrayList fieldTransMethodList=new ArrayList();
	ArrayList fieldWidthList=new ArrayList();
	ArrayList linkurlList=new ArrayList();
	ArrayList valuecolumnList=new ArrayList();
	ArrayList isLimitLengthList=new ArrayList();

	String partBackfield="";
	int perpage=0;

	int userid=pu.getHpUserId(hpid,""+subCompanyId,user);
	int usertype=pu.getHpUserType(hpid,""+subCompanyId,user);
	if(pc.getIsLocked(hpid).equals("1")) {
	   userid=Util.getIntValue(pc.getCreatorid(hpid));
	   usertype=Util.getIntValue(pc.getCreatortype(hpid));
	}

	
	String fields="";
	String linkmode="";

	String strsqlwhere=hpec.getStrsqlwhere(eid);
	String  strSql="select perpage,linkmode,showfield from hpElementSettingDetail where eid="+eid+" and userid="+userid+" and usertype="+usertype;	

	rs.executeSql(strSql);
	if(rs.next()){
		fields=Util.null2String(rs.getString("showfield"));
		perpage=Util.getIntValue(rs.getString("perpage"));		
		linkmode=Util.null2String(rs.getString("linkmode"));
	}

	if (!"".equals(fields)){
		ArrayList tempFieldList=Util.TokenizerString(fields,",");
		for(int i=0;i<tempFieldList.size();i++){
			String tempId=(String)tempFieldList.get(i);
			fieldIdList.add(tempId);
			fieldColumnList.add(hpefc.getFieldcolumn(tempId));
			fieldIsDate.add(hpefc.getIsdate(tempId));
			fieldTransMethodList.add(hpefc.getTransmethod(tempId));
			fieldWidthList.add(hpefc.getFieldWidth(tempId));
			linkurlList.add(hpefc.getLinkurl(tempId));
			valuecolumnList.add(hpefc.getValuecolumn(tempId));
			isLimitLengthList.add(hpefc.getIsLimitLength(tempId));
		}
	}
	
				
	sppbMethod=Util.null2String(ebc.getViewMethod(ebaseid));
	//System.out.println("sppbMethod: "+sppbMethod);


	SplitPageParaBean sppb=new SplitPageParaBean();
	tempClass = Class.forName("weaver.page.element.compatible.PageSql");	
	tempMethod = tempClass.getMethod(sppbMethod, new Class[]{weaver.hrm.User.class,String.class});
    ct = tempClass.getConstructor(null);
	sppb=(SplitPageParaBean)tempMethod.invoke(ct.newInstance(null), new Object[] {user,strsqlwhere});

	
    spu.setSpp(sppb);
    spu.setRecordCount(perpage);
	rs=spu.getCurrentPageRs(1,perpage);	

      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print((eid));
      out.write(_jsp_string4, 0, _jsp_string4.length);
      
           int rowcount=0;
           String imgSymbol="";
           if (!"".equals(esc.getIconEsymbol(hpec.getStyleid(eid)))) imgSymbol="<img name='esymbol' src='"+esc.getIconEsymbol(hpec.getStyleid(eid))+"'>";
           int size=fieldIdList.size();
           while(rs.next()&&size>0){
           
      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print((imgSymbol));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      
                    for(int i=0;i<size;i++){
                        String fieldId=(String)fieldIdList.get(i);
                        String columnName=(String)fieldColumnList.get(i);
                        String strIsDate=(String)fieldIsDate.get(i);
                        String fieldTransMethod=(String)fieldTransMethodList.get(i);
                        String fieldwidth=(String)fieldWidthList.get(i);
                        String linkurl=(String)linkurlList.get(i);
                        String valuecolumn=(String)valuecolumnList.get(i);
                        String isLimitLength=(String)isLimitLengthList.get(i);
                        String showValue="";                    
                        String cloumnValue=Util.null2String(rs.getString(columnName));
                        String urlValue=Util.null2String(rs.getString(valuecolumn));
                        String url=linkurl+urlValue;
                        String titleValue=cloumnValue;  

                        if("1".equals(isLimitLength)){
                        	
                        	cloumnValue=pu.getLimitStr(eid,fieldId,cloumnValue,user,hpid,subCompanyId);
                        	cloumnValue ="<font class='font'>"+cloumnValue+"</font>";
                        }
    					
                        if(!"".equals(linkurl)){
                        	cloumnValue ="<font class='font'>"+cloumnValue+"</font>";
                            if("1".equals(linkmode)){
                                showValue="<a href='"+url+"' target='_self'>"+cloumnValue+"</a>";
                            }else 
                                showValue="<a href=\"javascript:openFullWindowForXtable('"+url+"')\">"+cloumnValue+"</a>";
                        } else {                        
                            if(!"".equals(fieldTransMethod)){
                                tempClass = Class.forName("weaver.homepage.HomepageFiled");
        
                                tempMethod = tempClass.getMethod(fieldTransMethod, new Class[] {weaver.conn.RecordSet.class,weaver.hrm.User.class,String.class,String.class});
                                ct = tempClass.getConstructor(null);
                                
                                String  returnValue=(String)tempMethod.invoke(ct.newInstance(null), new Object[] {rs,user,cloumnValue,linkmode});
                                
                                showValue=returnValue;
                            } else {
                                
                                showValue=cloumnValue;                      
                            }
                        }
						if("planendtime".equals(columnName)){//TD:39934
                        	rs1.executeSql("select MAX(enddate) as enddate from Prj_TaskProcess where prjid = "+urlValue);
                        	if(rs1.next())
                        		showValue = Util.null2String(rs1.getString("enddate"));
                        	
                        }
                        //System.out.println("columnName:"+columnName+";urlValue:"+urlValue+";showValue:"+showValue);
        
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print((fieldwidth));
      out.write(_jsp_string8, 0, _jsp_string8.length);
      if("1".equals(isLimitLength)) out.println(" title=\""+titleValue+"\"");
      out.write(_jsp_string9, 0, _jsp_string9.length);
      out.print((showValue));
      out.write(_jsp_string10, 0, _jsp_string10.length);
      }
      out.write(_jsp_string11, 0, _jsp_string11.length);
      
            rowcount++;     
            if(rowcount<perpage){
      out.write(_jsp_string12, 0, _jsp_string12.length);
      out.print((size+1));
      out.write(_jsp_string13, 0, _jsp_string13.length);
      }
      out.write(_jsp_string14, 0, _jsp_string14.length);
      }
      out.write(_jsp_string15, 0, _jsp_string15.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("page/element/compatible/view.jsp"), -7015345230883368103L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("page/maint/common/initNoCache.jsp"), 2082238920609843656L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string5;
  private final static char []_jsp_string8;
  private final static char []_jsp_string6;
  private final static char []_jsp_string3;
  private final static char []_jsp_string9;
  private final static char []_jsp_string10;
  private final static char []_jsp_string1;
  private final static char []_jsp_string7;
  private final static char []_jsp_string11;
  private final static char []_jsp_string13;
  private final static char []_jsp_string14;
  private final static char []_jsp_string0;
  private final static char []_jsp_string15;
  private final static char []_jsp_string2;
  private final static char []_jsp_string12;
  private final static char []_jsp_string4;
  static {
    _jsp_string5 = "\r\n            <TR  height=\"18px\">\r\n                <TD width=\"8\">".toCharArray();
    _jsp_string8 = "\" ".toCharArray();
    _jsp_string6 = "</TD>\r\n                ".toCharArray();
    _jsp_string3 = "\r\n<TABLE  id='_contenttable_".toCharArray();
    _jsp_string9 = "><font class=font>".toCharArray();
    _jsp_string10 = "</font></TD>\r\n                ".toCharArray();
    _jsp_string1 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string7 = "\r\n        \r\n                    <TD width=\"".toCharArray();
    _jsp_string11 = "\r\n            </TR>\r\n            ".toCharArray();
    _jsp_string13 = "></td></TR>\r\n            ".toCharArray();
    _jsp_string14 = "\r\n            \r\n            ".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string15 = "        \r\n    </TABLE>\r\n    </TD>\r\n    <TD width=\"1px\"></TD>\r\n</TR>\r\n</TABLE>".toCharArray();
    _jsp_string2 = "\r\n".toCharArray();
    _jsp_string12 = "\r\n               <TR class='sparator' style='height:1px' height=1px><td style='padding:0px' colspan=".toCharArray();
    _jsp_string4 = "' class=\"Econtent\"  width=\"100%\">\r\n<TR>\r\n    <TD width=\"1px\"></TD>\r\n    <TD width=\"*\">      \r\n    <TABLE width=\"100%\">          \r\n     ".toCharArray();
  }
}
