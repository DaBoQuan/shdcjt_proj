/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._login;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import weaver.hrm.*;
import weaver.systeminfo.*;
import weaver.general.*;
import weaver.hrm.settings.ChgPasswdReminder;
import weaver.hrm.settings.RemindSettings;

public class _remindlogin__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=GBK");
    request.setCharacterEncoding("GBK");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      weaver.conn.RecordSet RecordSet;
      RecordSet = (weaver.conn.RecordSet) pageContext.getAttribute("RecordSet");
      if (RecordSet == null) {
        RecordSet = new weaver.conn.RecordSet();
        pageContext.setAttribute("RecordSet", RecordSet);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      
	User user = HrmUserVarify.getUser (request , response) ;
	
	ChgPasswdReminder reminder=new ChgPasswdReminder();
	RemindSettings settings=reminder.getRemindSettings();
	String RedirectFile = Util.null2String(request.getParameter("RedirectFile")) ;
	String gopage = Util.null2String(request.getParameter("gopage")) ;
	
	if(!"".equals(gopage)){
		RedirectFile = RedirectFile+ "&gopageOrientation="+gopage+"&gopage="+gopage;
	}
	String PasswordChangeReminderstr = Util.null2String(settings.getPasswordChangeReminder());
	boolean PasswordChangeReminder = false;
	if("1".equals(PasswordChangeReminderstr)){
		PasswordChangeReminder = true;
	}
	int passwdReminder = 0;
	if(PasswordChangeReminder){
		passwdReminder = 1;
	}
	String ChangePasswordDays = settings.getChangePasswordDays();
	String DaysToRemind = settings.getDaysToRemind();
	int id = user.getUID();
	String passwdchgdate = "";
	int passwdchgeddate = 0;
	int passwdreminddatenum = 0;
	int passwdelse = 0;
	String passwdreminddate = "";
	String canpass = "0";
	String canremind = "0";
	if(PasswordChangeReminder){
		RecordSet.executeSql("select passwdchgdate from hrmresource where id = "+id);
		if(RecordSet.next()){
			passwdchgdate = RecordSet.getString(1);
			passwdchgeddate = TimeUtil.dateInterval(passwdchgdate,TimeUtil.getCurrentDateString());
			System.out.println(passwdchgeddate);
			if(passwdchgeddate<Integer.parseInt(ChangePasswordDays)){
				canpass = "1";
			}
			passwdreminddate = TimeUtil.dateAdd(passwdchgdate,Integer.parseInt(ChangePasswordDays)-Integer.parseInt(DaysToRemind));
			try {
				passwdreminddatenum = TimeUtil.dateInterval(passwdreminddate,TimeUtil.getCurrentDateString());
			} catch(Exception ex) {
				passwdreminddatenum = 0;
			}
			passwdelse = Integer.parseInt(DaysToRemind) - passwdreminddatenum;
			if(passwdreminddatenum>=0){
				canremind = "1";
			}
		}else{
			response.sendRedirect(RedirectFile);
			return;
		}
	}else{
		response.sendRedirect(RedirectFile);
		return;
	}
	

      out.write(_jsp_string2, 0, _jsp_string2.length);
      out.print((passwdReminder));
      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print((canpass));
      out.write(_jsp_string4, 0, _jsp_string4.length);
      out.print((canremind));
      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print((passwdelse));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      out.print((SystemEnv.getHtmlLabelName(23988,user.getLanguage())+passwdelse+SystemEnv.getHtmlLabelName(1925,user.getLanguage())+SystemEnv.getHtmlLabelName(23989,user.getLanguage())+"\uff0c"+SystemEnv.getHtmlLabelName(23990,user.getLanguage())+"\uff1f"));
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print((RedirectFile));
      out.write(_jsp_string8, 0, _jsp_string8.length);
      out.print((RedirectFile));
      out.write(_jsp_string9, 0, _jsp_string9.length);
      out.print((RedirectFile));
      out.write(_jsp_string10, 0, _jsp_string10.length);
      out.print((SystemEnv.getHtmlLabelName(23997,user.getLanguage())+"\uff0c"+SystemEnv.getHtmlLabelName(23998,user.getLanguage())+"\uff01"));
      out.write(_jsp_string11, 0, _jsp_string11.length);
      out.print((RedirectFile));
      out.write(_jsp_string12, 0, _jsp_string12.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("login/RemindLogin.jsp"), -2183047589098806625L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string5;
  private final static char []_jsp_string7;
  private final static char []_jsp_string9;
  private final static char []_jsp_string8;
  private final static char []_jsp_string4;
  private final static char []_jsp_string1;
  private final static char []_jsp_string11;
  private final static char []_jsp_string6;
  private final static char []_jsp_string2;
  private final static char []_jsp_string12;
  private final static char []_jsp_string0;
  private final static char []_jsp_string3;
  private final static char []_jsp_string10;
  static {
    _jsp_string5 = "\r\nvar passwdelse = ".toCharArray();
    _jsp_string7 = "\");\r\n			if(result){\r\n				window.location = \"/hrm/resource/HrmResourcePassword.jsp?frompage=/login/RemindLogin.jsp&canpass=1&RedirectFile=".toCharArray();
    _jsp_string9 = "\";\r\n			}\r\n		}else{\r\n			window.location = \"".toCharArray();
    _jsp_string8 = "\";\r\n			}else{\r\n				window.location = \"".toCharArray();
    _jsp_string4 = "\r\nvar canremind = ".toCharArray();
    _jsp_string1 = "\r\n\r\n<html> \r\n<body> \r\n".toCharArray();
    _jsp_string11 = "\");\r\n		if(result){\r\n			window.location = \"/hrm/resource/HrmResourcePassword.jsp?frompage=/login/RemindLogin.jsp&RedirectFile=".toCharArray();
    _jsp_string6 = "\r\nif(passwdReminder==1){\r\n	if(canpass==1){\r\n		if(canremind==1){\r\n			result = confirm(\"".toCharArray();
    _jsp_string2 = "\r\n</body>\r\n</html>\r\n<script language=\"javascript\">\r\nvar passwdReminder = ".toCharArray();
    _jsp_string12 = "\";\r\n		}else{\r\n			window.location = \"/login/Logout.jsp\";\r\n		}\r\n	}\r\n}\r\n</script>".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string3 = "\r\nvar canpass = ".toCharArray();
    _jsp_string10 = "\";\r\n		}\r\n	}else{\r\n		result = confirm(\"".toCharArray();
  }
}
