/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._system;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;
import java.io.*;
import java.sql.*;
import weaver.general.*;

public class _createdboperation__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=GBK");
    request.setCharacterEncoding("GBK");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      weaver.system.EditProperties EditProperties;
      EditProperties = (weaver.system.EditProperties) pageContext.getAttribute("EditProperties");
      if (EditProperties == null) {
        EditProperties = new weaver.system.EditProperties();
        pageContext.setAttribute("EditProperties", EditProperties);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      

String sqlFilePath = GCONST.getSqlPath() ;

String dbserver = Util.null2String(request.getParameter("dbserver"));
String dbport = Util.null2String(request.getParameter("dbport"));    
String dbname = Util.null2String(request.getParameter("dbname"));
String username = Util.null2String(request.getParameter("username"));
String password = Util.null2String(request.getParameter("password"));
String dbtype = Util.null2String(request.getParameter("dbtype"));
String isexist = Util.null2String(request.getParameter("isexist"));
String code = Util.null2String(request.getParameter("code"));
char[]  c_code=new char[16];
new FileReader(GCONST.getRootPath()+File.separator+"WEB-INF"+File.separator+"code.key").read(c_code);
String realcode=new String(c_code).trim();
if(!realcode.equals(code)){

      out.write(_jsp_string2, 0, _jsp_string2.length);
      return;}
if(dbtype.equals("")) dbtype="1";
String url = "" ;
String forname = "" ;
Connection conn = null ;
String message="" ;
String path = "";
String linepara = "";
String lastsqlname = "" ;

try {

	if(dbtype.equals("1")){
		url = "jdbc:sqlserver://"+dbserver+":"+dbport+";DatabaseName=master" ;
		forname = "com.microsoft.sqlserver.jdbc.SQLServerDriver" ;
		path = request.getRealPath("/data/SQLServer");
		linepara = "go" ;
	}else if(dbtype.equals("2")){
		url = "jdbc:oracle:thin:@"+dbserver+":"+dbport+":"+dbname ;
		forname = "oracle.jdbc.OracleDriver" ;
		path = request.getRealPath("/data/Oracle");
		linepara = "/" ;
	}else if(dbtype.equals("3")){
		url = "jdbc:db2:"+dbserver+":"+dbname ;	
		forname = "COM.ibm.db2.jdbc.net.DB2Driver" ;
		path = request.getRealPath("/data/DB2");
		linepara = ";" ;
	}

	Driver driver = (Driver)Class.forName(forname).newInstance();
	DriverManager.registerDriver(driver);

	Properties props = new Properties();
	props.put("user", username);
	props.put("password", password);
	props.put("CHARSET", "ISO");
	conn = DriverManager.getConnection(url, props);

	Statement st = conn.createStatement() ;

	String sqlstr = "" ;
	String sqlfile = "";
	String readline = "" ;

	if(isexist.equals("1")){
		if(dbtype.equals("1")){
			sqlstr = " use master ";
				st.executeUpdate(sqlstr) ;
			sqlstr = " use "+dbname;
				st.executeUpdate(sqlstr) ;
		}
		message="";
	}else{
		if(dbtype.equals("1")){
			sqlstr = " use master ";
				st.executeUpdate(sqlstr) ;
			//sqlstr = " create database "+dbname;
			//	st.executeUpdate(sqlstr) ;
			sqlstr = " use "+dbname;
				st.executeUpdate(sqlstr) ;
		}
		File dir = new File(path);
		String fileList[] = dir.list();

		for(int i=0;i<fileList.length;i++){
			for(int j=i+1;j<fileList.length;j++){
				if(fileList[i].compareTo(fileList[j])>0){
					String tmpfileList=fileList[i];
					fileList[i]=fileList[j];
					fileList[j]=tmpfileList;
				}
			}
		}

		for(int i=0;i<fileList.length;i++){

			sqlfile = path + "/" + fileList[i] ;

//			out.println(fileList[i] +" is running .... <br>") ;
//			out.flush() ;

			//out.println(fileList[i]+" ");
			readline = "" ;
			sqlstr = "" ;
			File fin = new File(sqlfile);

			BufferedReader is
				  = new BufferedReader(new InputStreamReader(new FileInputStream(fin)));
			 
			while ((readline = is.readLine()) != null)   {
				readline = readline.trim() ;
				if(!readline.equalsIgnoreCase(linepara)) sqlstr += " "+ readline ;
				else if( !(sqlstr.trim()).equals("") ) {
					message += sqlstr+"<br>" ;
					st.executeUpdate(sqlstr) ;
					sqlstr = "" ;
					message = "" ;
				} 

			}
			is.close();
			lastsqlname = fileList[i];

//			out.println(lastsqlname+" execute success ! <br>") ;
//			out.flush() ;
		}  
		message="";
	}
 
}catch(Exception e) { message += e.toString(); }
finally {
	try { conn.close() ;} catch(Exception ex) {}
}

if(message.equals("")){ 
	EditProperties.editProp(dbserver,dbport,dbname,username,password,dbtype);
	EditProperties.editIndex();
	if(!lastsqlname.equals("")) EditProperties.editDblog(dbserver,dbname,dbtype,lastsqlname);
	message=" Success ! " ;
	message+="<br><br>\u8bf7\u91cd\u542fResin";
	message+="<br><br><a href=/index.htm target=_top>\u767b\u5165\u7cfb\u7edf</a>";

	//response.sendRedirect("/index.htm");
}else {
	message=" error ! message is below : <br>" + message;
	message+="<br><br><a href=/system/CreateDB.jsp>\u8fd4\u56de</a>";
}


      out.write(_jsp_string0, 0, _jsp_string0.length);
      out.print((message));
      out.write(_jsp_string3, 0, _jsp_string3.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("system/CreateDBOperation.jsp"), 4010901518477697245L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string3;
  private final static char []_jsp_string2;
  private final static char []_jsp_string1;
  private final static char []_jsp_string0;
  static {
    _jsp_string3 = "\r\n</BODY>\r\n</HTML>".toCharArray();
    _jsp_string2 = "\r\n\u65e0\u6548\u7684\u9a8c\u8bc1\u7801\uff01\r\n".toCharArray();
    _jsp_string1 = "\r\n\r\n\r\n<HTML><HEAD>\r\n<LINK href=\"/css/Weaver.css\" type=text/css rel=STYLESHEET>\r\n<SCRIPT language=\"javascript\" src=\"../../js/weaver.js\"></script>\r\n</head>\r\n<BODY>\r\n".toCharArray();
    _jsp_string0 = "\r\n".toCharArray();
  }
}
